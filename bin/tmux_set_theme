#! /usr/bin/env bash

# fixes PATH (we could be running from the crontab)
PATH="/opt/homebrew/bin:$(command -p getconf PATH)"

CALLER="${1:-direct}"

date +"%d.%m.%Y %H:%M:%S - ${CALLER}"

DOTFILES_ROOT="${HOME}/.dotfiles"
DOTFILES_LIBS_ROOT="${DOTFILES_ROOT}/libs"
DOTFILES_THEMES_ROOT="${DOTFILES_ROOT}/themes"

# load libraries
echo "› loading libraries"
source "${DOTFILES_LIBS_ROOT}/helpers.sh"

# detect OS
echo "› detecting OS"
os_detection

tmux_theme_cache_location="/tmp/tmux_theme_name.${USER}"

if [[ "${CALLER}" == "conf" ]]; then
    echo "Deleting cache file ${tmux_theme_cache_location}."

    rm -f "${tmux_theme_cache_location}"
fi

if ! tmux info &> /dev/null; then
    echo "Tmux is not running, exiting."

    exit 0
fi

tmux_theme_name="light"

case "${DOTFILES_OS}" in
    "${DOTFILES_OS_MACOS}")
        if is_dark_mode_on; then
            tmux_theme_name="dark"
        fi
    ;;
esac

if [[ -r "${tmux_theme_cache_location}" ]]; then
    tmux_theme_cached_name="$(< "${tmux_theme_cache_location}")"
fi

if [[ "${tmux_theme_cached_name}" == "${tmux_theme_name}" ]]; then
    echo "No change to theme (old=${tmux_theme_cached_name}, new=${tmux_theme_name}), exiting."

    exit 0
fi

# load theme colors
echo "› loading theme colors"

if load_theme_colors; then
    echo "Setting theme to ${tmux_theme_name}."
else
    tmux_theme_name="broken"

    >&2 echo "Loading theme color failed. Setting broken theme."
fi

echo -n "${tmux_theme_name}" > "${tmux_theme_cache_location}"



# ___ set tmux colors, style & formats ________________________________________

# set selection and buffer scrollbar foreground and background
tmux set -g mode-style "fg=${DOTFILES_THEME_TERTIARY_FG} bg=${DOTFILES_THEME_TERTIARY_BG}"

# set message bar's foreground and background
tmux set -g message-style "fg=${DOTFILES_THEME_TERTIARY_FG} bg=${DOTFILES_THEME_TERTIARY_BG}"

# set the status bar's foreground and background
tmux set -g status-fg "${DOTFILES_THEME_FG}"
tmux set -g status-bg "${DOTFILES_THEME_BG}"

# set the left and right status
tmux set -g status-left "#[bg=${DOTFILES_THEME_TERTIARY_BG},fg=${DOTFILES_THEME_TERTIARY_FG}] #S #[bg=${DOTFILES_THEME_BG}] " # session name (eg: 0)
tmux set -g status-right " #[bg=${DOTFILES_THEME_TERTIARY_BG},fg=${DOTFILES_THEME_TERTIARY_FG}] continuum: #{continuum_status} #[bg=${DOTFILES_THEME_BG}] #[bg=${DOTFILES_THEME_TERTIARY_BG},fg=${DOTFILES_THEME_TERTIARY_FG}] %d.%m.%Y %R #[bg=${DOTFILES_THEME_BG}] #[bg=${DOTFILES_THEME_TERTIARY_BG},fg=${DOTFILES_THEME_TERTIARY_FG}] #H " # continuum period + datetime + hostname

# set window status format
tmux set -g window-status-current-format "#[bg=${DOTFILES_THEME_PRIMARY_BG},fg=${DOTFILES_THEME_PRIMARY_FG}] #I #W #{?window_zoomed_flag,[zoomed] ,}" # window index + name (eg: 1 git)
tmux set -g window-status-format "#[bg=${DOTFILES_THEME_SECONDARY_BG},fg=${DOTFILES_THEME_SECONDARY_FG}] #I #W " # window index + name (eg: 1 git)

# set pane border format
tmux set -g pane-border-format "#[fg=${DOTFILES_THEME_PRIMARY_FG}]#P: #T (#H)" # pane number + pane title (eg: 1: dev (host.local))

# make pane border
tmux set -g pane-border-style "fg=${DOTFILES_THEME_SECONDARY_BG} bg=${DOTFILES_THEME_SECONDARY_BG}"

# make active pane border
tmux set -g pane-active-border-style "fg=${DOTFILES_THEME_PRIMARY_BG} bg=${DOTFILES_THEME_PRIMARY_BG}"

# initialize TMUX plugin manager (keep this line at the very bottom of any tmux conf, that is ran on its own)
tmux run -b '~/.tmux/plugins/tpm/tpm'
